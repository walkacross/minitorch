#pragma once

#include <ATen/ops/as_strided_ops.h>

namespace at {


// aten::as_strided(Tensor(a) self, SymInt[] size, SymInt[] stride, SymInt? storage_offset=None) -> Tensor(a)
    inline at::Tensor as_strided(const at::Tensor &self, at::IntArrayRef size, at::IntArrayRef stride,
                                 c10::optional <int64_t> storage_offset = std::nullopt) {
        return at::_ops::as_strided::call(self, c10::fromIntArrayRefSlow(size), c10::fromIntArrayRefSlow(stride),
                                          storage_offset.has_value() ? std::make_optional(c10::SymInt(*storage_offset))
                                                                     : std::nullopt);
    }
} //namespace at